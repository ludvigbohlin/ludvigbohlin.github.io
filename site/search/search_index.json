{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> <p></p> Welcome to the documentation! Our features. AI-powered insights and analytics <p>Experience powerful explorative analytics through AI combined with interactive dashboards.<p> <p> Insights through interactive dashboards:<p> <ul> <li>Sales</li> <li>Customer / CRM</li> <li>Marketing</li> <li>Product</li> <li>Supplier / Inventory</li> </ul> Dashboards \u00bb AI-powered segmentation and clustering <p>Segment customers and find the best audiences for campaigns in any channel.<p> <p>Optimal audiences for your campaigns:<p> <ul> <li>Email</li> <li>SMS</li> <li>Meta</li> <li>Google</li> <li>TikTok</li> </ul> Auto-targeting \u00bbClustering \u00bb </p> AI-powered product recommendations <p>Combine recommendations with custom rules to optimize your business omnichannel.<p> <p>Customized personalized recommendations</p> <ul> <li>Winback</li> <li>Last order</li> <li>Cross-sell</li> <li>Checkout</li> <li>Only on discount</li> Recommendations \u00bb </ul> <p></p>"},{"location":"External/Analytics/Customer-Insights/","title":"Customer Insights","text":""},{"location":"External/Analytics/Customer-Insights/#propensity-to-purchase","title":"Propensity to Purchase","text":"<p>The Propensity to Purchase-model classifies customers by their likelihood to purchase in the future - based on historical data. This insight can be integrated into marketing and sales strategies.</p> <p>To understand the chart here is an explanation:</p> <ul> <li>Each customer is grouped based on number of orders (O = 1, O = 2, O = 3, etc), and the chart displays a colored line for each group. </li> <li>For each group the propensity (y-axis) specifies the probability of another purchase for a customer within the group<ul> <li>For an example, see the group hovered in the below image. Here we can see that it's 24,3% probability that a customer that has one order and has been inactive 1 month, will perform another purchase before the specified inactive period (6 months)</li> </ul> </li> </ul> <p>Below the image you can add more groups with customers that have more orders (in the image we show groups with customers having 1-5 orders). You can also edit the parameter that specifies the number of months until user becomes inactive. By specifying this to 1 month you can get an idea of how money customers will move from having 1 order to 2 orders, from 2 orders to 3 orders, etc within the coming month.</p> <p>The \"Months of inactivity to show\"-bar only changes the number of months shown in the chart.</p> <p></p>"},{"location":"External/Analytics/Dashboards/","title":"Dashboards","text":"<p>Dashboards can be created by clicking the + icon in the dropdown menu. When you create a dashboard you are asked for a name, this name can be changed later.</p> <p></p> Show Advanced Settings <p> <ul> <li><code>Select Role</code>: One of <code>interaction</code>, <code>user</code>, and <code>item</code>. Defines what data the dashboard should be based on, and in most cases it should be <code>interaction</code>.</li> <li><code>Select number of columns</code>: Specifies the number of columns used in the grid system to fit dashboards. The default value is used in most cases. </li> <li><code>Import config</code>: This field can be used if you want to copy or export a dashboard from another platform. It is left blank in most cases.</li> </ul> </p>"},{"location":"External/Analytics/Dashboards/#viewedit-mode","title":"View/edit mode","text":"<p>To see a preview of made changes, you can use the view/edit mode toggle on the top left side of the dashboard as seen below. This will allow you to gain an overview of the dashboard after your changes.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#sections","title":"Sections","text":"<p>A section can be seen as a group of elements. Applied filters in one section still applies to all the elements on the dashboard howeever. You can create multiple sections with different elements in each section. One of the positive aspects of using sections is that you can move a group of elements together without having to move each element individually, and also allowing to create copies of whole sections. To toggle on or off a section, you can use the two arrow icon, next to the clone icon.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#add-element","title":"Add element","text":"<p>To add an element to your dashboard, click the <code>Add element</code> seen below.</p> <p></p> <p>Note! After adding elements or editing the dashboard, remember to click <code>Save</code> in the top right corner.</p>"},{"location":"External/Analytics/Dashboards/#clone-an-element","title":"Clone an element","text":"<p>To create a copy of an element in a fast and effective way, use the clone icone <code>+</code> as seen below. This will create a duplicate of the chosen element below.</p> <p> {: style width=\"400px\"}</p>"},{"location":"External/Analytics/Dashboards/#metric","title":"Metric","text":"<p>A metric is a single number, wich means that you can not show a field in a metric element (a field is an array of metrics). you can convert a field into a metric by writing an expression ex. SUM(field) this returns a metric.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#bar-chart","title":"Bar Chart","text":"<p>A bar chart shows <code>categorical data</code> with rectangular bars indicating the <code>distributions of the data</code>, in the picture below, we for example see amount of <code>unique customers per country</code>, the bar charts can be used to adapt the dashboard to show only data from one specific country. Simply press the country you want to see information about, and the dashboard will update accordingly.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#stacked-bar-chart","title":"Stacked Bar Chart","text":"<p>A stacked bar chart is made in the same way as a barchart, but with an added group key. The group key can be found under <code>Edit element</code> --&gt; <code>Advanced</code> --&gt; <code>Select group key</code>. Below is an example of a bar chart showing regions, with a group key on gender.  </p>"},{"location":"External/Analytics/Dashboards/#line-chart","title":"Line Chart","text":"<p>A line chart plots a graph with data points connected to a chosen metric, example below for example shows revenue over time. Hovering over the line chart data points, the revenue for that time will show.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#group-key-setting-can-be-found-under-edit-element-advanced-select-group-key-and-allows-you-to-see-lines-split-over-a-category-see-example-below-where-gender-is-used-as-group-key","title":"Group key setting can be found under <code>Edit element</code> --&gt; <code>Advanced</code> --&gt; <code>Select group key</code> and allows you to see lines split over a category, see example below where gender is used as group key:","text":"Show More Info <p> <ul> <li><code>Default</code>:Under default you can choose what values you want to include in your line chart, you can also select if you want the view to be from day to week, month etc. The `Format` selection lets you choose how many decimals you want, if you want the values to be shown as a percentage (%). The `Limit` lets you decide how many data points you want to show (the dots marked on the line).  </li> <li><code>Style</code>Here you can change the appearance of the line chart in the dashboards, feel free to test how the different margin settings affect the look of the line chart! By changing the `Title` or the `Sub title` no values will be changed, by changing it the chosen values only gets an alias.   </li> <li>In the <code>Advanced</code> tab you can <code>Select group key</code> by adding a field in the select group key the line chart will show multiple lines where each line represents a category in the selected field. This function should be combined with a bar chart where you can create a filter for the selected field. by filtering out categories in the barchart the line chart will show the remaining categories.        By filtering out a category in the bar chart the line representing this category is removed from the line chart. </li> </ul> </p>"},{"location":"External/Analytics/Dashboards/#donut-chart","title":"Donut chart","text":"<p>A donut chart divides the data into sections, where each section represents a portion of the whole. The size of each section is proportional to the value it presents. If a section is too small to include or exceds the limit of sections found under settings, it will be included under the <code>others</code> section.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#histogram","title":"Histogram","text":"<p>A histogram is a graphical representation that shows data in specified ranges as vertical bins.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#date-filter","title":"Date filter","text":"<p>The <code>Date filter</code> lets you adapt your dashboards to only show data for a chosen period of time, there are some premade limits, for example last week, last year etc. These can be found and chosen on the top of the date filter box after pressing it, you can also select a specified range of days by using the calendar.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#range-filter","title":"Range filter","text":"<p>The <code>Range filter</code> allows you to only show data in the dashboards where a chosen value is within the chosen limit, for example if you only want to show data for items with prices between 100sek to 200sek.  </p> <p></p>"},{"location":"External/Analytics/Dashboards/#filter","title":"Filter","text":"<p>The <code>Filter</code> can be used to only show one category of chosen metric, and update the dashboard accordingly.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#metric-selector","title":"Metric selector","text":"<p>In the different <code>elements</code> added to your dashboard, for example a bar chart or line chart, there's the opportunity to select <code>*metric*</code>, if you then add a <code>Metric selector</code> and choose a metric, all the elements where <code>*metric*</code> has been chosen, will be updated to match the chosen metric in the <code>Metric selector</code>. Using this will allow quicker changes of the data shown, as you can use the metric selector instead of manually changing the other elements.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#alluvial-chart","title":"Alluvial Chart","text":"<p>An alluvial chart can be described as a flow diagram that represents changes in structures over time, for us this is mostly used to represent how segments of customers are changed over time, going from new, to lapsed (lost) customers.  </p> <p>(There's a <code>Color scale</code> option under <code>Style</code> where the colors can be changed to blue/green/yellow/red instead of different shades of blue). Example of alluvial chart shown below.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#table","title":"Table","text":"<p>This element adds a table to the dashboard, if the table gets to wide there's a scroll bar furthest down in the table allowing horizontal scrolling. The table can be <code>sorted</code> by pressing on the value/text you want to sort by. Under <code>Style</code> in the edit screen of a table, there's an opportunity to add a <code>Background bar</code> which visualize how large/small the different values in the table are in comparison to the others. </p> <p></p>"},{"location":"External/Analytics/Dashboards/#pivot","title":"Pivot","text":"<p>A pivot table is used to visualize patterns and trends in large amounts of data, it can for example be used to show amount of lapsed customers per order cohort shown in the example below. Under <code>Edit element</code> you can select to show summarized values for row or/and columns. Under <code>Advanced</code> you can also select if you want each cell to show value/percent or both. There is also the ability to change if you want the calculations to be based upon rows or columns.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#image-grid","title":"Image grid","text":"<p>The image grid shows pictures of products in a dashboard. This element requires product data to be present in the dashboard.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#segments","title":"Segments","text":"<p>Lets you show data for only a chosen segment, these segments can be created under the <code>Segmentations</code> part of the platform.</p> <p></p>"},{"location":"External/Analytics/Dashboards/#categories","title":"Categories","text":"<p>Similar to bar chart, categories let's you choose what category to show data for, when the data is several categories in one cell, for example Color = <code>[red;blue]</code> where red and blue are not correlated.  </p>"},{"location":"External/Analytics/Dashboards/#text-content","title":"Text Content","text":"<p>The text content element is the most used element. It's basically just text that can be adapted through either markdown or HTML.</p> <p></p>"},{"location":"External/Analytics/Overview/","title":"Analytics Overview","text":"<p>You can customize dashboards to visualize various information and results based on your data. Dashboards are interactive and editable, and various elements can be added to your dashboard.</p> <p>You can find more information about how to create dashboards at page Dashboards.</p> <p></p>"},{"location":"External/Menu/Overview/","title":"Analytics Overview","text":"<p>The three dots in the top right corner provide access to the menu from where you can configure your platform.</p> <p></p>"},{"location":"External/Menu/Account/API-Keys/","title":"API Keys","text":"<p>API keys are primarily used for accessing the recommendation API to fetch product recommendations to your website or your email campaigns. </p>"},{"location":"External/Menu/Account/API-Keys/#test-your-api-request","title":"Test your API request","text":"<ul> <li>Create a new API key</li> <li>Open ubuntu</li> <li> <p>Copy from your  API key  <pre><code>  curl 'https://`PLATFORM`.infobaleen.com/api/v1/api-profiles/`473`/recommendations/user-to-items' -d '{\"Limit\":3,\"User\":\"`X`\"}' -H 'Authorization: `KEY`'\n</code></pre></p> </li> <li> <p>Use Rex in the user table under Model &gt; Users and replace X in the curl to verify you get the same results as the recommendations for that user</p> </li> </ul> <p>NOTE: If you try to use the curl command in Windows it will not work note the difference from the curl above with <code>\\</code> and <code>.exe</code> <pre><code>curl`.exe` 'https://PLATFORM.infobaleen.com/api/v1/api-profiles/473/recommendations/user-to-items' -d '{`\\`\"Limit`\\`\":3,`\\`\"User`\\`\":`\\`\"X`\\`\"}' -H 'Authorization: KEY'\n</code></pre></p>"},{"location":"External/Menu/Account/Logout/","title":"Logout","text":"<p>Press to logout from the platform. </p>"},{"location":"External/Menu/Account/Users/","title":"Users","text":"<p>Here you can add, or manage the persons with access to the platform, you can also see how long it was since someone visited the platform.</p> <p></p>"},{"location":"External/Menu/Account/Users/#note-giving-permission-to-only-oneseveral-data-models-is-still-under-development-and-does-not-restrict-as-it-should","title":"NOTE: giving permission to only one/several data models is still under development and does not restrict as it should","text":""},{"location":"External/Menu/Admin/Clear-CH-chache/","title":"Clear CH chache","text":""},{"location":"External/Menu/Admin/Configuration/","title":"Configuration","text":"<p>In the configuration page you can add connections to data, for example databases, and you can also add connections to integrations that you want to export data to, for example an email service.</p>"},{"location":"External/Menu/Admin/Configuration/#databases","title":"Databases","text":"<p>A database configuration is set up to fetch data into the platform, and it can be a connection to something like a data lake or a mysql server. It can look something like in the image below. Note that a parameter like <code>${db-user}</code> needs to be added in the <code>Secrets</code> page.</p> <p></p>"},{"location":"External/Menu/Admin/Configuration/#integrations","title":"Integrations","text":"<p>An integration configuration is set up to export data from the platform.  It can look something like the facebook-export in the image below (emails are exported to Facebook). Note that a parameter like <code>${fb-token}</code> needs to be added in the <code>Secrets</code> page.</p> <p></p>"},{"location":"External/Menu/Admin/Connections/","title":"Connections","text":"<p>Shows the latest connections to the platform.</p>"},{"location":"External/Menu/Admin/Events/","title":"Events","text":"<p>The events page lists all events taking place in the platform. The events include various things like source and data model updates as well as errors. </p> <p>The events page can also be reached with the clock icon in the top right corner.</p> <p></p>"},{"location":"External/Menu/Admin/Secrets/","title":"Secrets","text":"<p>A secret can be seen as a password we want to hide, but use an alias for. An example of a secret is the API key we need to receive data from a data lake or similar.</p> <p>When creating a secret you need two things: * <code>Label</code>: the name of the secret * <code>Secret</code>: an API key or similar that we want to store, but that should not be visible.</p> <p></p>"},{"location":"External/Menu/Documentation/Agent/","title":"Agent: Filesystem query helper functions","text":"<p>The agent supports a powerful query language for CSV files. Below are available helper functions and some practical examples that might be useful when setting up your sources.</p>"},{"location":"External/Menu/Documentation/Agent/#operators-and-functions","title":"Operators and Functions","text":"Show more information <ul> <li>`x LIKE format`</li> <li>`x IN(a,b,...)`</li> <li>`a OR b`</li> <li>`a AND b`</li> <li>`a = b`</li> <li>`a &lt; b`</li> <li>`a &gt; b`</li> <li>`a &lt;= b`</li> <li>`a &gt;= b`</li> <li>`a &lt;&gt; b`</li> <li>`multiIf(cond1,val1,...,defaultVal)` Ex: `multiIf(a &gt; 1, 'a&gt;1', 'a&lt;=1')`</li> <li>`sleep(millisec)`</li> </ul>"},{"location":"External/Menu/Documentation/Agent/#numerical","title":"Numerical","text":"Show more information <ul> <li>`abs(x)` </li> <li>`floor(x)` </li> <li>`ceil(x)` </li> <li>`round(x)` </li> <li>`least(a,b)` </li> <li>`greatest(a,b)` </li> </ul>"},{"location":"External/Menu/Documentation/Agent/#time-uses-gos-time-formatting-eg-2006-01-02-150405","title":"Time (uses go's time formatting: eg. 2006-01-02 15:04:05)","text":"<ul> <li><code>unixTimestamp(x [,format])</code> Ex: <code>unixTimestamp('2015-01-01', '2006-01-02')</code> =&gt; <code>1420070400</code></li> <li><code>fromUnixtime(x [,format])</code> Ex: <code>fromUnixTime(1420070400, '2006-01-02')</code> =&gt; <code>2015-01-01</code></li> <li><code>now()</code> Ex: <code>now()</code> =&gt; <code>1571038684</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#string","title":"String","text":"<ul> <li><code>sluggify(x)</code> Ex: <code>sluggify('HelloWorld')</code> =&gt; <code>hello-world</code></li> <li><code>queryescape(x)</code> QueryEscape escapes the string so it can be safely placed inside a URL query.</li> <li><code>match(pattern,name)</code> (uses go's <code>path.Match</code>)</li> <li><code>slice(x, start, stop, delimiter)</code> Ex: <code>slice('a-b-c', 0, 1, '-')</code> =&gt; <code>a</code></li> <li><code>sort(x,delimiter)</code> Ex: <code>sort('c-a-b')</code> =&gt; <code>a-b-c</code></li> <li><code>reverse(x, delimiter)</code> Ex: <code>reverse('abc', '')</code> =&gt; <code>cba</code>, <code>reverse('a-b-c')</code> =&gt; <code>c-b-a</code></li> <li><code>concatWs(delimiter,xs...)</code> Ex: <code>concatWs('-', 'a', 'b')</code> =&gt; <code>a-b</code></li> <li><code>coalesce(xs...)</code> Ex: <code>coalesce('', 'fallback')</code> =&gt; <code>fallback</code></li> <li><code>concat(xs...)</code>  Ex: <code>concat('a', 'b')</code> =&gt; <code>ab</code></li> <li><code>replace(x,old,new)</code> Ex: <code>replace('foobar', 'bar', 'baz')</code> =&gt; <code>foobaz</code> </li> <li><code>lower(x)</code></li> <li><code>upper(x)</code></li> <li><code>length(x)</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#json","title":"JSON","text":"<ul> <li><code>pickJson(x, fields...)</code> Ex: <code>pickJson('{\"foo\":1, \"bar\":2, \"baz\":3}', 'foo', 'bar')</code> =&gt; <code>{\"foo\":1, \"bar\":2}</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#hashrand","title":"Hash/rand","text":"<ul> <li><code>rand()</code></li> <li><code>randInt()</code></li> <li><code>randInt(x)</code></li> <li><code>md5(x)</code></li> <li><code>xxHash63(x)</code></li> <li><code>xxHash64(x)</code></li> <li><code>identity(x)</code> Ex: <code>identity('a')</code> =&gt; <code>a</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#file-details","title":"File Details","text":"<ul> <li><code>size()</code></li> <li><code>path()</code></li> <li><code>modifiedAt()</code></li> <li><code>depth()</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#special","title":"Special","text":"<ul> <li><code>analyse()</code> Anlayse column data. Ex: <code>select analyse(price) from ...</code> =&gt; <code>{\"CountNum\":431359,\"CountEmpty\":0,\"CountString\":0,\"Sum\":555691303,\"Average\":1288.2339364285353,\"Min\":1,\"Max\":618993.5625}</code></li> </ul>"},{"location":"External/Menu/Documentation/Agent/#join","title":"Join","text":"<p>Inner joins are supported, but limited to only one joined table. The join must be written in the following format. Note that joins must load the secondary table data into RAM, so use this feature wisely.  <pre><code>SELECT *, u.* from `transaction.csv` t JOIN `users.csv` u ON t.user_id = u.id\n</code></pre> Note that when referring to the joined table in the <code>select</code>, you must use an alias, but not for the <code>from</code> file.</p>"},{"location":"External/Menu/Documentation/Agent/#sub-queries","title":"Sub queries","text":"<p>Support for sub queries. Since the join support is limited, this is the typical use case for using sub queries  <pre><code>SELECT * from `transactions.csv` WHERE user_id IN (SELECT id FROM `users.csv`) t\n</code></pre></p>"},{"location":"External/Menu/Documentation/Agent/#practical-examples","title":"Practical Examples","text":""},{"location":"External/Menu/Documentation/Agent/#convert-date-to-unix-timestamp","title":"Convert date to unix timestamp","text":"<p>Uploaded interaction data requires a column with unix timestamp data, making this function useful. See different examples below depending on date format (go date format). See [https://yourbasic.org/golang/format-parse-string-time-date-example/] <pre><code>unix_timestamp(ts_string,&lt;FORMAT&gt;)\nunix_timestamp(ts_string,\"2006-01-02 15:04:05\")\nunix_timestamp(ts_string,\"2006-01-02T15:04:05Z\")\n</code></pre></p>"},{"location":"External/Menu/Documentation/Agent/#example-age-from-time-string","title":"Example: Age from time string","text":"<pre><code>round((now() - unix_timestamp(birth_year,\"2006-01-02\")) / (60 * 60 * 24 * 365)) as age\n</code></pre>"},{"location":"External/Menu/Documentation/Agent/#string-concatenation","title":"String concatenation","text":"<pre><code>concat(title, '(', author, ', ', year, ')') as displayName\n</code></pre>"},{"location":"External/Menu/Documentation/Agent/#example-building-image-urls","title":"Example: Building image urls","text":"<pre><code>concat('/api/v1/image?w=300&amp;h=200&amp;label=', queryEscape(english_title)) as dummy_image\n</code></pre>"},{"location":"External/Menu/Documentation/Agent/#multi-if","title":"Multi if","text":""},{"location":"External/Menu/Documentation/Agent/#example-build-filter-variables","title":"Example: Build filter variables","text":"<p>For item id's that you want to exclude, build a variable and then filter on it in the data model setup. <pre><code>multiIf(_id IN (123, 456, 789) OR category_4='Candy', 1, 0) as is_irrelevant\n</code></pre></p>"},{"location":"External/Menu/Documentation/Agent/#example-name-from-id","title":"Example: Name from id","text":"<pre><code>multiIf(\n    store_id = \"b92a0b68-3b4b-4fba-8711-a69100e940e9\",\"Ume\u00e5\",\n    store_id = \"48292bda-f26c-428e-8de5-a69100e940e9\",\"G\u00f6teborg\",\n    store_id = \"8d46721c-2368-480b-913a-a69100e940e9\",\"Stockholm\",\n'unknown_store') as store,\n</code></pre>"},{"location":"External/Menu/Documentation/New-Issue/","title":"New issue","text":"<p>If you've found something not working properly an issue can be created. If you have permissions, the link will take you to Github where the issue will be addressed. Fill in as much information as you can about the problem</p> <p></p>"},{"location":"External/Menu/Documentation/New-Issue/#note-if-this-doesnt-work-please-contact-us-and-let-us-know-about-the-issueproblembug-that-you-found-on-our-platform-and-we-will-address-it-as-fast-as-possible","title":"NOTE: If this doesn't work, please contact us and let us know about the issue/problem/bug that you found on our platform and we will address it as fast as possible.","text":""},{"location":"External/Menu/Documentation/Recommendations/","title":"Recommendations - API Documentation","text":""},{"location":"External/Menu/Documentation/Recommendations/#authorization","title":"Authorization","text":"<p>Requests are authenticated and authorized with API Keys. API keys can be managed from the application menu Account / Api keys. When sending a request, the API key is provided using the Authorization header.</p>"},{"location":"External/Menu/Documentation/Recommendations/#recommendations","title":"Recommendations","text":"<p>Item recommendations from a data model are provided by the API in two ways, given a user (/user-to-items) or from a list of items (/items-to-items).</p>"},{"location":"External/Menu/Documentation/Recommendations/#user-recommendations-user-to-items","title":"User recommendations (user-to-items)","text":"<p>User-to-items recommendations can be used to generate content for user landing pages, email marketing and similar. Given a user id, a list of recommended items is returned.</p> <p><code>POST /api/v1/data-models/&lt;id&gt;/recommendations/user-to-items</code></p> <p>Request parameters (JSON body)</p>"},{"location":"External/Menu/Documentation/Recommendations/#input-parameters","title":"Input parameters","text":"Parameter Type Description User string User id to fetch item recommendations for Items array of strings Item IDs to build the recommendations from MinInteractionTs int Min timestamp for interactions to base the recommendations on MaxInteractions int Pick orders until <code>MaxInteractions</code> interactions are included MaxOrders int Pick orders until <code>MaxOrders</code> orders are included InteractionFilter SQL To select from history based on SQL query Persona Object \"{\"gender\": \"Female\", \"country_code\": \"SE\"}\""},{"location":"External/Menu/Documentation/Recommendations/#logical-parameters","title":"Logical parameters","text":"Parameter Type Description TrendFactor float Value between 0 and 1. 0 is used to base recommendations on similarity only, and 1 weights the recommendations on the current trend/popularity. Default is 1. Recurring boolean Allow recommending items already consumed by the user. Default is false. AllowedItems array of item ids Only items in <code>AllowedItems</code> is returned in the response ForcedItems array of item ids All items in <code>ForcedItems</code> is returned in the response BlockedItems array of item ids No items in the <code>BlockedItems</code> is returned in the response Candidates int number of items to consider. Default to all available items. Can be used for faster calculations. ItemFilterExpression SQL <code>\"price&gt;100\"</code> ItemBoostExpression SQL <code>\"toFloat(margin)\"</code> Search string Experimental Full-text-search. Filter and boost based on search string. FieldLimits array of objects Ex: <code>[{\"Field\":\"name\", \"Limit\": 2}]</code> makes sure to not return more than 2 items of the same color. Context See example <code>[{\"Name\":\"ageLimit\", \"FloatValue\":11},{\"Name\": \"genres\", \"ArrayValues\": \"action,thriller\"}, {\"Name\": \"gender\", \"StringValue\": \"female\"},{\"Name\": \"ages\", \"Field\": \"AgeLimitSv\", \"Option\": \"last\"}]</code>"},{"location":"External/Menu/Documentation/Recommendations/#output-parameters","title":"Output parameters","text":"Parameter Type Description Shuffled bool shuffle recommendations StrictAfterFieldLimitCheck bool Return error if we can not find <code>Limit</code> valid items after FieldLimits BestEffort bool Return all valid items even if it is less than <code>Limit</code> Format string Response format/encoding, available options: <code>json</code>, <code>og</code> Columns array of strings Meta data columns to include in the response Limit integer Maximum number of items returned, default=0 Offset integer Items to skip"},{"location":"External/Menu/Documentation/Recommendations/#curl-example","title":"cURL example","text":"<pre><code>curl -X POST ${IB_API_URL}/api/v1/data-models/&lt;id&gt;/recommendations/user-to-items \\\n-H \"Authorization: ${IB_API_KEY}\" \\\n-d '{\"User\": \"123\", \"Limit\": 10, \"Recurring\": false}'\n</code></pre> <p>Response The response contains the top recommended items ordered according to the relevance score. The item object contains <code>Id</code> and all meta-data fields that is specified in the data-model configuration.</p> <pre><code>[\n    {\"Id\":\"7942856970334767135\", ...},\n    {\"Id\":\"9136495236170061780\", ...},\n    ...\n]\n</code></pre>"},{"location":"External/Menu/Manage-Data/Data-Models/","title":"Data models","text":""},{"location":"External/Menu/Manage-Data/Data-Models/#what-is-a-data-model","title":"What is a data model?","text":"<p>A data model is made up of of 3 tables (from the sources):</p> <ul> <li>Interaction table</li> <li>User table </li> <li>Item table </li> </ul> <p>Each line in the interaction table is linked to a user and an item in the item and user table. When we have chosen what sources should be our interaction, item and user tables we can create a data model. After this we can start creating additional information through expressions. These expressions can later be used in dashboards. The relations and overview can be seen in the below image.</p> <p></p> <p>When a data model is used for email analysis, the interaction becomes a specific <code>email sent to a user</code>, the user becomes <code>the one receiving the email</code>, and the email that was sent is treated as an item.</p>"},{"location":"External/Menu/Manage-Data/Data-Models/#edit-a-data-model","title":"Edit a data model","text":"<p>To edit and see the detailed info about a data model, you need to edit it. You can edit it by clicking the \"pen\" either after clicking the data model, or in the data-models list, see images below.</p> <p></p> Show another place to access the edit mode"},{"location":"External/Menu/Manage-Data/Data-Models/#interaction-configuration","title":"Interaction Configuration","text":"<p>The interaction table specifies info about the interaction (a user interacting with an item) that includes a timestamp (ts). An interaction config can look something like below:</p> <p></p>  Field <p>This is the name of the given in the source query (it can not be changed in the data model).  </p>  Alias <p>By adding an alias the the field name is replaced by the alias name in the dashboard and segmentation. In Recommendation the field name is always shown even if an alias is added.</p>  Role  Name Description Categories <code>Categories</code> is used when data is made up of multiple <code>category</code>'s. The data format for <code>categories</code> has to be [<code>category1</code>;<code>category2</code>;<code>category3</code>;<code>etc</code>] Revenue Revenue can only be set on 1 field and should be <code>sales price (EX VAT)</code>. The reason you set mark your <code>sales price (EX VAT)</code> with the revenue role is to generate suggested revenue related expressions. Quantity If a user buys multiple items of the same SKU at the same time this will be either represented as 1 interaction row with quantity <code>x</code> In this case that field should be set to <code>Quantity</code>. for some data souces this will be represented as <code>x</code> interaction rows without a quantity row. Timestamp The timestamp role should only be set to the field that represent the interaction timestamp (when the interaction took place). other timestamps such as <code>return date</code> etc. should instead be set to number. The timestamp role is needed to create suggested expressions. User The User role is set to the key-field that connects the interaction table to the user table. Item The Item role is set to the key-field that connects the interaction table to the Item table. Number The Number role is automatically set to all fields that only contains numbers (you can make toFloat(<code>field</code>) without error). The number role lets you interact with a field as a number meaning you can make an calculation expressions such as if(<code>field</code> &gt; 100). If you want to make a histogram you can only use fields with role Number because you specify the <code>bin width</code> wich can only be done if the field is concidered a Number (does not work if the field is a Category). Category All fields that can not be classified as a Number are classified as a Category. Category's are used in for example Bar charts. Enum EnumCategories  Active  <p>The Active toggle button lets you activate/deactivate a field. a deactivated field can not be used in dashboards.</p>  Info  <p>Click on the small <code>i</code> button to see a preview of how the data looks/is formatted.</p>"},{"location":"External/Menu/Manage-Data/Data-Models/#item-configuration","title":"Item Configuration","text":"<p>The item table specifies info about the items, i.e. the products.</p> <p></p>   Fields <p>This is the name of the given in the source query (it can not be changed in the data model).  </p>  Alias <p>By adding an alias the the field name is replaced by the alias name in the dashboard and segmentation. In Recommendation the field name is always shown even if an alias is added.</p>  Role Name Description Categories <code>Categories</code> is used when data is made up of multiple <code>category</code>'s. The data format for <code>categories</code> has to be [<code>category1</code>;<code>category2</code>;<code>category3</code>;<code>etc</code>] Timestamp The timestamp lets you work with unixtimestamp and shows the result in as a datetime (readable format). Format The format role represent the name of the item and is what is shown in the Image grid in the dashboards and in the recommendations Image The image role represent what field will be shown as a image in the Image grid in the dashboards and in the recommendations. The image field is usually called something with <code>url</code>. Number The Number role is automatically set to all fields that only contains numbers (you can make toFloat(<code>field</code>) without error). The number role lets you interact with a field as a number meaning you can make an calculation expressions such as if(<code>field</code> &gt; 100). If you want to make a histogram you can only use fields with role Number because you specify the <code>bin width</code> wich can only be done if the field is concidered a Number (does not work if the field is a Category). Category All fields that can not be classified as a Number are classified as a Category. Category's are used in for example Bar charts. Enum EnumCategories   MLMeta <p>The MLMeta toggle button controls what is returned when when you make an API call. This is to give you control what data you want to return to the customer. You don't want to activate MLMeta on all fields because this will result in returning a lot of \"trash columns\" to the customer that they have to filter in turn get the relevant data. Note that you also have to select the role <code>Image</code> and <code>Format</code> for the product to show. MLMeta is only relevant in the recommendations view.</p>   MLFilter <p>The MLFilter lets you write expressions and filter your data in in the recommendations. You should only activate MLFilter for the fields you actually want to create a filter for, the reason for this is that when you activate MLFilter for a field this will store all data in the memory and every time the API calls for a recommendation the data model have to iterate through all fields with MLFilter resulting in a bad performance on the customers side (when the customer want to load our recommendations on their site the load speed will depend on how many MLFilters you have activated.  </p> <p></p>  Active  <p>The Active toggle button lets you activate/deactivate a field. a deactivated field can not be used in dashboards.</p>   Info <p>Click on the small <code>i</code> button to see a preview of how the data looks/is formatted.</p>"},{"location":"External/Menu/Manage-Data/Data-Models/#user-config","title":"User config","text":"<p>The user table specifies info about the users, i.e. the customers. </p> <p></p>  Field <p>This is the name of the given in the source query (it can not be changed in the data model).  </p>  Alias  <p>By adding an alias the the field name is replaced by the alias name in the dashboard and segmentation. In Recommendation the field name is always shown even if an alias is added.</p>  Role Name Description Categories <code>Categories</code> is used when data is made up of multiple <code>category</code>'s. The data format for <code>categories</code> has to be [<code>category1</code>;<code>category2</code>;<code>category3</code>;<code>etc</code>] Timestamp The timestamp lets you work with unixtimestamp and shows the result in as a datetime (readable format). Pll Email Number The Number role is automatically set to all fields that only contains numbers (you can make toFloat(<code>field</code>) without error). The number role lets you interact with a field as a number meaning you can make an calculation expressions such as if(<code>field</code> &gt; 100). If you want to make a histogram you can only use fields with role Number because you specify the <code>bin width</code> which can only be done if the field is considered a Number (does not work if the field is a Category). Category All fields that can not be classified as a Number are classified as a Category. Category's are used in for example Bar . Enum EnumCategories  Persona <p>The Persona toggle button controls what columns are used in the recommendations. For example, if we activate the field <code>gender</code> as a Persona, the recommendation engine will base the recommendations on what gender the user has. If we active the field <code>age</code> it will be used as a dimension in the recommendation, and so on.</p> <p>Note: Use a maximum of 2 columns to define persona. Alternatively, make sure that the cardinality (number of groups) is less than 1000. (ex gender: 2 different and cities: 500 different, which means <code>2*500 = 1000</code> groups)</p> <p></p>"},{"location":"External/Menu/Manage-Data/Data-Models/#custom-properties","title":"Custom properties","text":"<p>The Custom properties-section lets you define custom user group based on your data. The feature exploits the aggregated user data that can be found in the menu at <code>Model-&gt;Users</code>, see the image below.</p> <p></p> <p>Using for example <code>user.agg.first</code> and <code>user.agg.orders</code> as parameters <code>first</code> and <code>orders</code> it is possible to create, for example, a customer lifecycle definition as in the image below.  </p> <p></p>"},{"location":"External/Menu/Manage-Data/Data-Models/#expression-syntax","title":"Expression syntax","text":"Function Description <code>SUM()</code> Summarize a value, for example SUM(returned_quantity) returns the total amount of returned quantity (over chosen period of time) <code>uniq()</code> counts the amount of unique values, for example uniq(user) returns the amount of unique users. <code>uniqExact()</code> Is almost the same as uniq(), however uniq() may have a very small inaccuracy (that most often doesn't matter at all), but if it's important to have for example 100.002 (correct) instead of 100.000, use uniqExact(). The reason for this is simply that uniq() is less demanding. <code>countIf()</code> this counts +1 for each time an argument is correct on an interaction (row). <code>Example</code>: let's say there's 10 interactions (ten rows) in a table with a column that's currency. On 7 of the 10 rows the currency column consists of 'SEK', if we now use countIf(currency = 'SEK') we will get the value 7. <code>sumIf()</code> sumIf(Value that will be summarized when, X = N)  <code>Example</code>: sumIf(revenue, currency = 'SEK') <code>uniqIf()</code> multiIf(boolean, result_1, boolean, result_2, ..., boolean, result_n, else_this) multiIf(name = 'red', colour, name = 'big', 'size', 'no data')"},{"location":"External/Menu/Manage-Data/Data-Models/#data-model-expression-examples","title":"Data model expression examples","text":"<p>Expressions can be used to calculate certain variables, for example the amount of returned items <code>(SUM(returned_quantity)</code> or divide certain users into different categories, for example dividing the customer base into customers with or without &gt; 1 purchases. Expressions are made in the edit mode of a data model, and later can be found and used in dashboards as parameters and metrics. </p> <p>When writing expressions, remember to check and/or modify so that the variables like <code>revenue</code>, <code>ts</code> (timestamp), <code>quantity</code> is correct according to your data. returned quantity can for example be written in different ways (example: <code>returnedQuantity</code> / <code>returned_quantity</code>)  depending on data source. returnedQuantity, returned_quantity depending on the dataset.</p>"},{"location":"External/Menu/Manage-Data/Data-Models/#interaction-expressions","title":"Interaction expressions","text":"Expression Description Days since previous order cohort multiIf (agg.daysFromPrev &lt;=30,'1.&lt;30', agg.daysFromPrev &lt;=60,'2.30-60', agg.daysFromPrev &lt;=90,'3.60-90', agg.daysFromPrev &lt;=180,'4.90-180', agg.daysFromPrev &lt;=360,'5.180-360', agg.daysFromPrev &lt;=720,'6. 360-720', agg.daysFromPrev &lt;=4000,'7.&gt;720', '8.New') Has return multiIf(returned_quantity &gt; 0, 'Return', 'No return') First order (month toStartOfMonth(user.agg.first) Active week toMonday(ts) Active month toStartOfMonth(ts) % discount SUM(full_price-revenue)/SUM(full_price) Revenue SUM(revenue) Price per item SUM(revenue)/SUM(quantity) Revenue per user SUM(revenue)/uniq(user) Average order value SUM(revenue)/uniq(user,ts) Sold items SUM(quantity) Items per order SUM(quantity)/uniq(user,ts) % returned quantity SUM(returned_quantity)/SUM(quantity) LTV 30d We usually do 5 different LTV metrics, just remember to change name accordingly to selected amount of days. <code>sumIf(revenue, ts &lt; user.agg.first + 30 AND addDays(user.agg.first, 30) &lt;= now())/uniqIf(user,addDays(user.agg.first, 30) &lt;= now())</code>, <code>sumIf(revenue, ts &lt; user.agg.first + 60 AND addDays(user.agg.first, 60) &lt;= now())/uniqIf(user,addDays(user.agg.first, 60) &lt;= now())</code>, <code>sumIf(revenue, ts &lt; user.agg.first + 90 AND addDays(user.agg.first, 90) &lt;= now())/uniqIf(user,addDays(user.agg.first, 90) &lt;= now())</code>, <code>sumIf(revenue, ts &lt; user.agg.first + 180 AND addDays(user.agg.first, 180) &lt;= now())/uniqIf(user,addDays(user.agg.first, 180) &lt;= now())</code>, <code>sumIf(revenue, ts &lt; user.agg.first + 365 AND addDays(user.agg.first, 365) &lt;= now())/uniqIf(user,addDays(user.agg.first, 365) &lt;= now())</code> Returned quantity SUM(returned_quantity) Returned or not returned multiIf(returned_quantity &gt; 0, 'Return', 'No return')"},{"location":"External/Menu/Manage-Data/Data-Models/#item-expressions","title":"Item expressions","text":"Description Expression Sold items [item based dashboards] <code>(item based dashboards here means that item is chosen as Role when creating the dashboard)</code> SUM(article_number.agg.trans) Available quantity [item based dashboards] <code>(item based dashboards here means that item is chosen as Role when creating the dashboard)</code> SUM(item.in_stock) SUM(full_price-PriceExVatIncDiscSEK)/SUM(full_price) SUM(DiscountSEK) / SUM((DiscountSEK + PriceIncVatIncDiscSEK)"},{"location":"External/Menu/Manage-Data/Data-Models/#user-expressions","title":"User expressions","text":"Description Expression Users &gt; 1 order uniqIf(user,user.agg.orders&gt;1)/uniq(user)"},{"location":"External/Menu/Manage-Data/Import-Files/","title":"Import data to the platform","text":"<p>There are various ways to import data to the platform, here we present the most common use cases.</p>"},{"location":"External/Menu/Manage-Data/Import-Files/#uploading-files-to-the-platform-csv-for-example","title":"Uploading files to the platform (CSV for example)","text":"<p>Go to the platform and then to <code>Manage data -&gt; Import files</code> (can be found at the top right menu by clicking the three dots, see example image below). </p> <p>Drag the file to the drop-box in order to upload it to the platform</p> <p>Uploaded files are available from the \"imports (csv-fs)\" database connection when creating new sources (see next step).</p> <p></p>"},{"location":"External/Menu/Manage-Data/Import-Files/#using-a-feed-google-feed-for-example","title":"Using a feed (Google Feed for example)","text":"<p>A feed is a file that contains a list of products that often is used to advertise through Google Merchant Center. Often these feeds are updated with latest information which means Sift Lab can use the feed to add relevant product details to the platform, such as image link data.</p> <p>Feeds are most often published as a public URL in format <code>.xml</code>.</p>  Adding a feed as a data source  <ol> <li>Get the public URL of the feed</li> <li>Add a new <code>source</code>, often it is a good idea to add a \"Merge Filter\" to avoid fetching too much data (you can for example add <code>now() &lt; toFloat(last_seen) + 7*24*3600</code>)</li> <li>Add a query similar to below and also add <code>decoder=head</code> in the field <code>Preprocessor directives</code> to show the file structure. Note that you have to write <code>url:</code> before <code>https://</code>, see example below <pre><code>SELECT\n    *\nFROM `url:https://exampleurl.com/plugin-export/shoppingfeed/se`  \n</code></pre></li> </ol> <p>[Note that you have to write url: before https://]  </p>  Preprocessor directives  <p>Start by writing <code>decoder=xml</code> (or <code>=feed</code>) to show the file structure, it will in the preview window show the content.</p> <p>decoder: describes what file format, xml, csv, json etc. root: navigates the file and shows where you want to read data. rowtag: selects the object. pluck: inside your rowtag you can have multiple data columns, pluck lets you choose wich you want to get.  </p> <p>Below is an example of what to write in the preprocessor to fetch feed data correctly: <code>decoder=xml</code> <code>root=rss.channel</code> <code>rowtag=item</code> <code>pluck=google_product_category,price</code> </p> <p>You can then run <code>EXECUTE PREVIEW QUERY</code> to see the result.</p>  JSON Files  <p>An example json file could look like: ``` [ \u00a0 \u00a0 { \u00a0 \u00a0 \u00a0 \u00a0 \"id\": \"\", \u00a0 \u00a0 \u00a0 \u00a0 \"user_id\": \"\", \u00a0 \u00a0 \u00a0 \u00a0 \"username\": \"\" \u00a0 \u00a0 }, \u00a0 \u00a0 { \u00a0 \u00a0 \u00a0 \u00a0 \"id\": \"\", \u00a0 \u00a0 \u00a0 \u00a0 \"user_id\": \"\" \u00a0 \u00a0 \u00a0 \u00a0 \"username\": \"\" \u00a0 \u00a0 } ]</p> <p>SELECT * FROM <code>url:https://...json</code> </p>  preprocessing directive for json  <p><code>decoder=json</code> <code>json_prefix=[0]</code></p>"},{"location":"External/Menu/Manage-Data/Import-Files/#using-a-database-connection","title":"Using a database connection","text":"<p>First, make sure you know the origin files to fetch. If files are fetched from </p> <p>Go to the platform and then to <code>Admin -&gt; Configuration</code> (can be found at the top right menu by clicking the three dots, see example image below).</p>"},{"location":"External/Menu/Manage-Data/Import-Files/#set-up-a-configuration","title":"Set up a configuration","text":"<p>Add a database and name the <code>Database</code> based on the what system they use (centra, voyado, etc), and choose the matching <code>Driver</code>. In the <code>Config</code> field, check the standard URL provided by the corresponding ecommerce platform. </p> <p>Note: A key or token is most often needed to access databases. This key can be added under <code>Admin -&gt; Secrets</code>. </p>"},{"location":"External/Menu/Manage-Data/Import-Files/#make-arbitrary-query","title":"Make arbitrary query","text":"<p>Create a source and make an arbitrary query similar to SELECT * FROM <code>users.gz</code> for Centra. You can list possible paths by using SELECT * FROM <code>*</code> . </p> <p>This will trigger a proxy sync, and in the case of a Centra customer as in the example image below, the <code>.gz</code> files will appear once completed. This normally takes 1-5 hours.</p>"},{"location":"External/Menu/Manage-Data/Import-Files/#how-to-verify-that-the-sync-works","title":"How to verify that the sync works","text":"<p>Choose the source you created and press the pen to edit it. Go to the <code>ADD QUERY</code> tab and choose SELECT * FROM <code>*</code>.  </p> <p>If the sync is ready, you will see a list of files to choose from, for example, <code>users.gz</code>, <code>items.gz</code>, <code>interactions.gz</code>, see image below. If you see the files imported you are now ready to create sources!</p> <p></p>"},{"location":"External/Menu/Manage-Data/Results/","title":"Results","text":"<p>Here the results from auto-targeting and clustering are listed as seen below.</p> <p></p>"},{"location":"External/Menu/Manage-Data/Sources/","title":"Sources","text":""},{"location":"External/Menu/Manage-Data/Sources/#create-sources","title":"Create sources","text":"<p>When the data has been imported, go to <code>Manage Data -&gt; Sources</code> and create a new source by clicking the purple plus sign as seen in the below image. </p> <ol> <li>Name the source <code>import_[source of data]_[type of data]</code> where <code>[source of data]</code> specifies where the data comes from (centra, voyado, etc), and the <code>[type of data]</code> specifies the data type (items, users, interactions, etc). </li> </ol> <p></p> <ol> <li>Choose an identifier for the source using the <code>Id columns</code> field.  If the source you\u2019re creating is for:<ul> <li>interactions: we want to identify each interaction through a user, an item and the time of the purchase, therefore choose user,ts,item under id columns and then press create.</li> <li>items: we want to identify each item by using an item id (often sku or variant). </li> <li>users: we want to identify each user by using a user id. </li> </ul> </li> </ol> <p>The fields <code>Comment</code> and <code>Merge Filter</code> can be left empty, and you can press <code>CREATE</code>. </p> <ol> <li>Choose database connection and create a <code>QUERY</code>  If it\u2019s a centra/voyado customer choose that option, if the files were uploaded manually, choose imports.</li> </ol> <p>You can now see the query stage, as standard <code>\u201cSELECT * FROM `*`\u201d</code> will show, if you press \u201cEXECUTE PREVIEW SUMMARY\u201d you will see all the imported files you can choose to gather data from. Copy the filename you want to use and enter that name in the query above, like <code>SELECT * FROM [ENTER FILENAME HERE]</code>.</p> <p>The import file is now done, press sync and save to exit. </p> <ol> <li>Now repeat the \"Create source\"-step 2 but name the file <code>model_[source of data]_[type of data]</code> (the use same identifier as in the import file). <ul> <li>In the <code>Choose database connection</code> now choose <code>source</code> instead, and press <code>execute preview summary</code>, now choose the import source file and edit the query to select from that, like \"<code>SELECT * FROM ENTER_SOURCENAME_HERE</code>\" and then press <code>Save and sync</code>.</li> </ul> </li> </ol>"},{"location":"External/Menu/Manage-Data/Sources/#frontpage-columns","title":"Frontpage columns","text":"<p>See below an example image from source view, with a source named <code>transactions</code>.</p> <p></p> <p>Here is a short explanation of the columns (note that not all columns are shown in the above image):</p> <p> Name  Name of source</p>  id  <p>Every source has an unique id which is used to show dependencies between sources.</p>  Count  <p>Count describes how many rows the source have. There can only be 1 row for every unique key column. if there are multiple rows with the same key all but 1 is removed.</p>  Tags  <p>You can tag a source to keep track of how it is used.</p>  Drivers  <p>The drivers show what driver is used and also if it is active (green) or inactive (red). If a source has multiple queries there will be multiple drivers, here you can see wich source is active and wich are not.</p>  Sync  <p>You can set a daily sync for the source, for example <code>DailyAt:6</code>. </p>  Dependencies  <p>Dependencies for a source show what other sources the are used to build up the source.  An example for this is  <pre><code>SELECT * FROM Source1  \nLEFT JOIN Source2 on Source2.id = Source1.id  \nUNION  \nSELECT * FROM Source3  \n</code></pre> This will show the id for source 1,2,3 in the Dependencies for the new source.</p>  Updated At  <p>Shows how long ago the source was last modified.</p>  Synced At  <p>Shows how long ago the source was last synced.</p>  Top Menu  <p>In the source view there are also some funcationality that can be accessed using the icons in the top right corner.</p> <p></p>  Delete  <p>Delete the selected source.</p>  Tag  <p>Select a source, click Tag and write a new tag or select an old tag.</p>  Set sync schedule  <p>Configure a daily data sync to update the source on a regular basis.</p>  Migrate   Truncate  <p>Truncate wipes the source of all data. This is usefull if you have changed key column for example because if you just sync the data the old data is not removed.  [Note that some sources only read 1 week data at the time to save time, if you truc a source like this all historic data is removed wich is bad]</p>  Sync  <p>Manually syncs the source.</p>  Create  <p>Creates a new source.</p>"},{"location":"External/Menu/Manage-Data/Sources/#edit-a-source","title":"Edit a source","text":"<p>When clicking a source, you find the edit mode by clicking the \"pen\" in the top right corner. This will open a view as can be seen in the image below. </p> <p></p>  Settings   Name  Just a name   Id columns  The Id columns has to be choosen to be unique. if the id is not unique (the same id for many rows) only 1 row will be saved and all others are removed.   For the interaction table the id has to contain user AND id or ts,item. The reason user has to be an id column is because when user is the first id column all interactions are sorted on user first. this lets you use expressions such as agg.i wich count number of interactions a user has made. if the interaction table is not sorted on user first the aggregation functions doesnt work.   For multiple id columns they are sorted in the order they are written. User,ts,item is sorted first on user, then on ts and lastly on item.    SELECT CUSTOM COLUMNS is usefull if you want other names than the predefined such as SKU.   RunEvery  Set a sync time   Comment   Merge filter  lets you filter out your query before you save it.  A Merge filter discards everything that is not true before saving the table. For example if you add a query similar to `toFloat(ts) &gt; now()-100*24*3600`, then all timestamp (ts) data from later than 100 days will be discarded.    Overview  Shows what is in the source currently   Query   Database connection  Define the type of connection for the data to be added to the source.   Load saved query  lets you reload previously run queries   Preprocessor directives  Preprocessor information can be found under the \"Import Files\" section of the documentation.   Query expressions  You need to enclose variable names that contain other characters than letters and numbers with `backticks` ` `,   this includes whitespace ' ', dot '.', etc...   ## Below is further information about more advanced queries  SELECT * FROM `raw:  id,item 1,item1 2,item2` this returns a table.   UNION   A UNION merges two data sources by including all unique rows from both. When making a union the columns need to have the same name and be in the same order <pre><code>SELECT * FROM `table 1`\nUNION\nSELECT * FROM `table 2`\n</code></pre> if you have overlapping id rows in `table 1` and `table 2` the id in `table 1` will be saved and `table 2` will be discared. ex.  to try this, create a test source <pre><code>select \nincr(1,50) AS id,\n'table 1' AS item\nfrom `&lt;RANDOM_SOURCE&gt;`\n\nUNION\nselect \nincr(1,1) AS id,\n'table 2' AS item\nfrom `&lt;RANDOM_SOURCE&gt;`\n</code></pre> then create a new source  <pre><code>SELECT * FROM `&lt;TEST_SOURCE&gt;`\n</code></pre> this will show that all overlapping ids will have item from `table 1`.  A UNION can also be suffixed by ALL, where UNION ALL will not discard duplicates, meaning much faster execution but leaves duplicate rows if they exist.   INSERT INTO   insert into lets you create multiple tables in the same query that you can use to create a UNION or LEFT JOIN. <pre><code>INSERT INTO &lt;table_name&gt;\nSELECT * FROM `&lt;source_name&gt;`\n;\n</code></pre> The `;` is needed to mark where the table end.  When using the table you created with INSERT INTO you use the  not the  ex. <pre><code>LEFT JOIN &lt;table_name&gt; ON &lt;table_name&gt;.id = XXX.id\n</code></pre>   LEFT JOIN and JOIN  LEFT JOIN lets you append more columns to an existing table, while join only keeps the ones matching. See below a code example where you can change `left join` to `join` to see the effects.  <pre><code>INSERT INTO countries SELECT * FROM `raw:\nid,country\n1,se\n2,no\n`;\n\nINSERT INTO currencies SELECT * FROM `raw:\ncountry,currency\nse,sek\nus,usd\n`;\n\n\nselect * from countries\nleft join currencies ON countries.country = currencies.country\n</code></pre>     NOT IN  Only selects rows that do not match, example  <pre><code>SELECT * from `raw:\nid,name\n1,anni-frid\n2,agnetha\n3,bj\u00f6rn\n4,benny\n`\nWHERE name NOT IN ('anni-frid', 'agnetha')\n</code></pre>  Will return   <pre><code>id,name\n3,bj\u00f6rn\n4,benny\n</code></pre>   firstSeen()   firstseen() saves only the first encountered row for   coalese  toFloat()  unixTimestamp()   split() and slice() and slicestr()   These expressions can be used to edit strings, see an example below:  <pre><code>Insert into a\nSELECT * FROM `raw:\na   b\n1   ABCDE`\n;\n\nSELECT \n    a AS a,\n    split(b,'') AS step1,\n    slice(split(b,''),0,3) AS step2,\n    replace(slice(split(b,''),0,3),',','') AS step3,\n    length(b),\n    slicestr(b,1,2)\nFROM a\n</code></pre>  The result will be: <pre><code>a   step1        step2.     step3    length(b)    slicestr(b, 1, 2)\n1   A,B,C,D,E.   A,B,C  ABC  5            BC\n</code></pre>   groupconcat_ws   <pre><code>Insert into a\nSELECT * FROM `raw:\nId,user,ordernr,item,price\n1,100,1,A,\"10SEK\"\n2,100,1,B,\"20SEK\"\n3,100,1,C,\"30SEK\"`\n;\nSELECT user, ordernr, groupconcat_ws(price, ',') price_list FROM a\n</code></pre>  The result will be: <pre><code>user    ordernr price_list\n100 1   10SEK,20SEK,30SEK\n</code></pre>   Create a custom user.agg.(field)   the datamodel creates aggregate functions such as user.agg.revenue. to create one yourself do the following. In the below example I create `user.agg.margin` similar to `user.agg.revenue`  <pre><code>--aggregates margins per user same as user.agg.revenue but with margin\nINSERT INTO margin\nSELECT\n    user AS user,\n    concat('',SUM(margin)) AS total_margin\nFROM `s3 - transactions`;\n\nSELECT \nUI.user AS user,\nmargin.total_margin AS total_margin,\nUI.other fields...\nFROM `user_import` AS UI\n\nLEFT JOIN margin ON margin.user = UI.user\n</code></pre> Note that you need to add `concat('',)` to the sum expression. this is because you cant LEFT JOIN a float. `concat('',)` converts it into a string. `concat('',SUM(margin)) AS total_margin`"},{"location":"External/Menu/Model/Interactions/","title":"Interactions","text":"<p>Here you can browse all the data present in your data model, the item data starts with <code>item.</code> followed by the column name, the <code>user.</code>refers to user data.</p> <p>The filter button on the top left side can be used to show/hide certain columns and the top right filter button lets you select certain ranges, specific data you are looking for etc.</p> <p></p>"},{"location":"External/Menu/Model/Interactions/#example-of-item-data","title":"Example of item data","text":""},{"location":"External/Menu/Model/Interactions/#example-of-user-data","title":"Example of user data","text":""},{"location":"External/Menu/Model/Overview/","title":"Overview","text":"<p>This gives an overview of the data model, including the total number of interactions, the total number of unique users, and machine learning information. You can also filter down on certain metrics/dates to gain the overview you desire.</p> <p></p>"},{"location":"External/Menu/Model/Products/","title":"Products","text":"<p>Here you can browse all the product data present in your data model. The filter button on the top left can be used to show/hide certain columns, and the top right filter button lets you select certain ranges, specific data you are looking for etc.</p> <p></p>"},{"location":"External/Menu/Model/Users/","title":"Users","text":"<p>Here you can browse all the user data present in your data model. </p> <p>The filter button on the top left side can be used to show/hide certain columns and the top right filter button lets you select certain ranges, specific data you are looking for etc.</p> <p></p>"},{"location":"External/Menu/Other/Overlaps/","title":"Overlaps","text":""},{"location":"External/Other/Add-Data/","title":"Adding Data","text":""},{"location":"External/Other/Add-Data/#sift-lab-how-to-add-data","title":"Sift Lab - How to add data","text":"<p>Adding data to Sift Lab can be done in different ways:</p> <ul> <li>Using a shared S3-compatible storage, e.g. Google Cloud/AWS, where Sift Lab can access files</li> <li>Locally run the Sift Lab agent with access to a folder with files</li> <li>Upload files via the Sift Lab API</li> <li>Provide a way for Sift Lab to access files using FTP/SFTP</li> </ul> <p>Using S3 is the optimal alternative, and data updates are flexible and can be done for last X days.</p>"},{"location":"External/Other/Data-Specification/","title":"Data Specification","text":""},{"location":"External/Other/Data-Specification/#sift-lab-data-specification","title":"Sift Lab - Data Specification","text":"<p>A datamodel in Sift Lab is made up of three data tables. Each line in the interaction table is linked to a specific user and item in the item and user tables. </p> <pre><code>classDiagram\n`Transaction data` --&gt; Datamodel\n`Product data` --&gt; Datamodel\n`User data` --&gt; Datamodel</code></pre>"},{"location":"External/Other/Data-Specification/#data-encoding","title":"Data encoding","text":"<p>Data must be encoded as UTF-8 + RFC 4180 (see more info at https://tools.ietf.org/html/rfc4180). Below are some specifics regarding the cell and row formatting.</p> Case Example Line break \\n Quotes must be escaped \u201c14\u201d\u201d TV\u201d Cell wrap with double if the value contains , or \\n \u201cHello, world\u201d Number, avoid space and comma. 12345678.9 Timestamp/date, use unix timestamp or formatted date string. 1591718519 or \u201c2020-03-17 15:01:02\u201d or \u201c2006-01-02T15:04:05-0700\u201d <p>A valid example</p> <pre><code>id,value,number\n1,\"Hello, world!\",123.45\n2,\"14\"\" TV\",123.45\n</code></pre>"},{"location":"External/Other/Data-Specification/#transaction-data","title":"Transaction data","text":"<p>Provide a file containing transactional data between your products and users. Usually represents order rows.</p> <p>If necessary, you may provide an additional file with data that is associated with an order number. An example would be an order header containing shipping cost, payment fee etc. In this case, provide an order number in the transactional data, and use the order number as the unique identifier in the orders file. </p> Field Data type Note id ID (required) Must uniquely identify a transaction/order row. user_id ID (required) Must uniquely identify a user. product_Id ID (required) Must uniquely identify a product. timestamp Timestamp (required) Timestamp at which the interaction occurred. revenue Number (Product price x quantity) Use sales ex VAT vat_percent Number margin Number discount Number Discount for all items in the row. currency String exchange_rate Number If you have sales in different currencies. order_status String order_number String quantity Number Number columns must be adjusted for quantity, ex the Revenue/Margin column must be equal to the Total Revenue/Margin for that interaction. cancelled_quantity Number returned_quantity Number coupons/campaigns String If multiple, use semicolon separated list: \u201cDiscountA;DiscountB\u201d payment_method String payment_price Number shipping_method String shipping_price Number ...&lt; ANY &gt; Number, String Additional metadata may be added that you find interesting to examine in our analytics."},{"location":"External/Other/Data-Specification/#product-data","title":"Product data","text":"<p>Provide a file containing product (item) meta data. Make sure all product ids that are present in the transactions are also present in this file.</p> <p>Categorical data in hierarchical structure should be added as separate columns: <code>category_1</code>, <code>category_2</code>, etc. If a product can have multiple categories but without hierarchy, provide them as a semi-colon separated string: <code>\u201ccategoryA;categoryC:categoryE\u201d</code>. An example would be genres for a movie, as a movie can be associated with multiple genres in no particular order.</p> Field Data type Note id ID (required) Must uniquely identify a product. title String A name that will be associated with the product. image_url String URL to product image. brand String in_stock Number Number of items in stock. supplier String price Number price_discounted Number Ex if there is a campaign present. product_url String URL if product recommendations are to be used. status String created Timestamp category_1 \u2026 String Use multiple columns if hierarchical structure. ...&lt; ANY &gt; Number, String Additional metadata may be added that you find interesting to examine in our analytics."},{"location":"External/Other/Data-Specification/#user-data","title":"User data","text":"<p>Provide a file containing user meta data. Make sure all user ids that are present in the transactions are also present in this file.</p> <p>In order to have deletes propagate to our side, provide users with empty data on all fields except id or a <code>\u201cis_deleted\u201d</code> field that we will use to clear all metadata.</p> Field Data type Note id ID (required) Must uniquely identify a user, same as in transactions. email String age Number birthdate Date May be used to extract age by platform city String country String market String gender String created Timestamp ...&lt; ANY &gt; Number, String Additional metadata may be added that you find interesting to examine in our analytics."},{"location":"External/Other/Landing-Page/","title":"Landing page","text":"<p>The landing page gives you an overview of what is happening on the plattform and gives you quick access to the things that you are currently working with  </p>"},{"location":"External/Other/Landing-Page/#shortcuts","title":"Shortcuts","text":"<p>On the top you have shortcuts to create new segments and dashboards. Below you have 7 personal quicklinks to your most recently viewed dashboard or segments. that update everytime you view a dashboard or segment. </p>"},{"location":"External/Other/Landing-Page/#activity","title":"Activity","text":"<p>The activity shows who has been working with the platform and with what.  </p>"},{"location":"External/Other/Landing-Page/#featured-dashboard","title":"Featured dashboard","text":"<p>The featured dashboard allows you to pin one of your dashboards to the landing page for easy access.  You can change which dashboard is shown on the landing page by 1. select the dashboard you want. 2. click Edit 3. go to Settings 5. under Show in context select Data model - landing page </p>"},{"location":"External/Recommendations/Data-Available-In-Recommendations/","title":"Data Available In Recommendations","text":""},{"location":"External/Recommendations/Data-Available-In-Recommendations/#data-available-in-recommendations","title":"Data available in recommendations","text":""},{"location":"External/Recommendations/Data-Available-In-Recommendations/#mlmeta","title":"MlMeta","text":"<p>To show an image and name on your recomendations you have to choose a format field and an image field under items AND activate the ml meta for these fields.</p>"},{"location":"External/Recommendations/Data-Available-In-Recommendations/#mlfilter","title":"MlFilter","text":"<p>To write filter expressions based on fields you have to activate ml filter for these fields</p>"},{"location":"External/Recommendations/Front-Page/","title":"Front Page","text":""},{"location":"External/Recommendations/Front-Page/#front-page","title":"Front page","text":""},{"location":"External/Recommendations/Front-Page/#search-for-items","title":"Search for items","text":"<p>Items added in the search items window are counted as items given to the platform through the API call. This means they dont not affected by <code>boughtArticleGroup</code> but affects <code>basketArticleGroup</code>. </p>"},{"location":"External/Recommendations/Front-Page/#profile","title":"Profile","text":"<p>Here you choose what profile to view and edit, all your previous profiles as well as their <code>id</code> is shown here. </p>"},{"location":"External/Recommendations/Front-Page/#refresh","title":"Refresh","text":"<p>The refresh button simply refreshes the</p>"},{"location":"External/Recommendations/Front-Page/#clear-user-and-items","title":"Clear user and items","text":"<p>Removes selected items and user</p>"},{"location":"External/Recommendations/Front-Page/#bench","title":"Bench","text":"<p>Shows how fast the recommendation are returend when making an API call. (if your datamodel has MLFilter active for many fields the recommendations will be slower).</p>"},{"location":"External/Recommendations/Front-Page/#add-random-item","title":"Add random item","text":"<p>Same as search for items but adds a random item.</p>"},{"location":"External/Recommendations/Front-Page/#add-random-user","title":"Add random user","text":"<p>Selects a random user and shows what items this user has previously bought and the returned recommended items based on this. </p>"},{"location":"External/Recommendations/Front-Page/#recommendation-output","title":"Recommendation output","text":"<p>The output is what the API returns to the customer. All fields active in the Columns section are returnerd. if the <code>image</code> is active the output will only show the image and format. by disabling the image you can see all other fields that are returned. With image active:  With image inactive: </p>"},{"location":"External/Recommendations/Overview/","title":"Recommendations Overview","text":"<p>You can use the platform to create personalized product recommendations that can be added to your website, checkout flow or in email campaigns. By applying <code>Filters</code> and <code>Rules</code> you can adapt the result to however you desire. </p> <p>In the recommendations tab you can configure everything related to your recommendations. </p> <p>We have integrations to <code>Dotdigital</code>, <code>Voyado</code>, <code>Rule</code> etc, if you wish for other integrations let us know and we will discuss the opportunities. You can also export recommendations using our API which enables a wide variety of use cases.</p> <p>Example of recommendations use case can be at page here.</p> <p></p>"},{"location":"External/Recommendations/Recommendation-Profiles/","title":"Recommendation Profiles","text":""},{"location":"External/Recommendations/Recommendation-Profiles/#on-site-recommendations","title":"On-site recommendations","text":"<p>Similar products recommendation</p> <ul> <li>Recommend products from the same category</li> <li>Purpose: High recognition factor</li> </ul> <p>Inspiration recommendation</p> <ul> <li>Recommend products in categories that the customer has not purchased from before / selected product</li> <li>Purpose: Inspire purchases in the most relevant categories that have not yet been purchased from / the product is not in</li> </ul> <p>Check-out recommendation</p> <ul> <li>Recommend cheaper products based on what the customer has placed in their shopping cart</li> <li>Purpose: Increase AOV with a relevant product in the lower price segment</li> <li>Expression: tofloat(Price) &lt; tofloat(last(basketArticlePrice))\u00d70.8</li> </ul> <p>On sale recommendations</p> <ul> <li>Recommend products that are on sale</li> <li>Purpose: Increase the sale percentage by showing relevant products on sale.</li> </ul> <p>Cross-sell recommendations</p> <ul> <li>Recommend products from other categories than what you're currently looking at</li> </ul>"},{"location":"External/Recommendations/Recommendation-Profiles/#email-recommendations","title":"Email recommendations","text":"<p>Standard recommendation</p> <ul> <li>Recommend the most likely next purchase (medium trend)</li> <li>Purpose: High likelihood of conversion</li> </ul> <p>Win-back recommendation</p> <ul> <li>Recommend the most likely products a customer will purchase based on historical purchasing behavior</li> <li>Purpose: Present the products that a churned customer is most likely to buy</li> </ul> <p>Thanks for the last order recommendation</p> <ul> <li>Recommend the most likely products based on the customer's last order</li> <li>Purpose: Increase the number of customers who make another purchase</li> </ul> <p>On sale recommendations</p> <ul> <li>Recommend products that are on sale</li> <li>Purpose: Increase the sale percentage by showing relevant products on sale.</li> </ul>"},{"location":"External/Recommendations/Recommendations-In-Emails/","title":"Recommendations In Emails","text":""},{"location":"External/Recommendations/Recommendations-In-Emails/#recommendations-in-emails","title":"Recommendations in emails","text":""},{"location":"External/Recommendations/Recommendations-In-Emails/#introduction","title":"Introduction","text":"<p>We can supply personalized recommendations in automated email flows. The technical integration varies between partners, but the main difference compared to segments is that we supply an individually customized set of products per user.</p>"},{"location":"External/Recommendations/Recommendations-In-Emails/#partners","title":"Partners","text":"<p>Here we specify how the process works between us and specified partners</p>"},{"location":"External/Recommendations/Recommendations-In-Emails/#voyado","title":"Voyado","text":"<p>Voyado has an ftp server to which we push a file of the form <pre><code>ContactId,Skus,ExpiryDate\n00000000-0000-0000-0000-000000000000,\"Item692,Item165,Item835,Item166,Item836,Item838,Item277,Item504,Item332,Item218,Item608,Item528\",9999-12-31T00:00:00.000+0000\n0001394c-9e71-43d6-86f3-ada901fc4c10,\"Item218,Item411,Item135,Item504,Item692,Item202,Item1035,Item835,Item412,Item277,Item610,Item515\",9999-12-31T00:00:00.000+0000\n00021b19-db3d-4d26-84ce-ad56g0f028e3,\"Item165,Item702,Item701,Item146,Item166,Item835,Item1035,Item610,Item836,Item135,Item218,Item150\",9999-12-31T00:00:00.000+0000\n</code></pre> The list of <code>Skus</code> is generated from our recommendation engine for the user specified under <code>ContactId</code>, where the 0 line is the fallback recommendation.</p> <p>-- Insert how to setup Voyado Export here --</p> <p>Once the recommendation flow is set up and an initial export has been sent, the recommendations can be previewed in Voyado. This is done by us selecting a few contactIds from the platform for them to check. Then the customer triggers a support ticket by sending an email to support@revide.se (revide is the old name, this may be updated) with the contactIds and requests checking the preview.</p> <p>Note: Historically there has been some issues due to contacts being labeled as \"Contact\" instead of \"Member\". This should be resolved as of April 2022, but to be safe, it could be a good idea to locate and include a user labeled \"Contact\" that has a purchase history.</p>"},{"location":"External/Recommendations/Settings/","title":"Settings","text":""},{"location":"External/Recommendations/Settings/#recommendation-profiles","title":"Recommendation Profiles","text":"<p>Here we explain the different settings fields that can be seen after clicking the cog wheel, as well as what data you find and can use.</p> <p></p> Search <p>Items added in the search items window are counted as items given to the platform through the API call. This means they dont not affected by <code>boughtArticleGroup</code> but affects <code>basketArticleGroup</code>. </p> Profile <p>Saved profiles </p> Refresh <p></p> Clear user and items <p>Removes selected items and user </p> Bench <p>Shows how fast the recommendation are returend when making an API call. (if your datamodel has MLFilter active for many fields the recommendations will be slower). </p> Add random item <p>Same as search for items but adds a random item. </p> Add random user <p>Selects a random user and shows what items this user has previously bought and the returned recommended items based on this.  </p>"},{"location":"External/Recommendations/Settings/#data-available-in-recommendations","title":"Data available in recommendations","text":"MlMeta <p>To show an image and name on your recomendations page you have to choose a format field in the data model edit mode, as well as an image field under items (also in the data model edit mode), and lastly activate the ml meta for these fields wanted. </p> MlFilter <p>To write filter expressions based on fields you have to activate ml filter for these fields, this is done in the edit mode of the data model. </p>"},{"location":"External/Recommendations/Settings/#filters-and-customization-options","title":"Filters And Customization Options","text":""},{"location":"External/Recommendations/Settings/#search","title":"Search","text":"<p>Here you can search on all the items included in the machine learning (for example only items sold &gt; X times). If you select an item you will see the recommendations provided by the platform for that specific product(s).</p>"},{"location":"External/Recommendations/Settings/#columns","title":"Columns","text":"<p>Columns are the data columns that can be used to create filters and rules. These are activated in the data model with the <code>MlFilter</code> toggle (MlFilter = Machine Learning Filter), see the image below. </p> <p></p>"},{"location":"External/Recommendations/Settings/#filter-expression","title":"Filter expression","text":"<p>Here you can write an expression that creates a filter for your recommendation profile. Some example configurations:</p>"},{"location":"External/Recommendations/Settings/#recommend-products-in-a-specific-category","title":"Recommend products in a specific category","text":"<p>To recommend prodcuts in a specific category you can use something like <code>category = 'Kaffe &amp; Te'</code>, or <code>price</code> &gt; <code>100</code></p> <p>If the expression is <code>True</code> the product will be included in the recommendation, and it the expression is <code>False</code> the product will be filtered. In the case of <code>price</code> &gt; <code>100</code>, the expression will return <code>True</code> for all products with a price larger than 100 thus removing all items with a price lower than 100 from the recommendations.</p>"},{"location":"External/Recommendations/Settings/#recommend-products-with-specific-names-or-characters","title":"Recommend products with specific names or characters","text":"<p>To recommended products that does not contain either <code>HOOK</code>, <code>TAPE</code> nor <code>AA</code>, you can configure the filter according to:  <pre><code>(contains(articleName, 'HOOK') OR contains(articleName, 'TAPE') OR contains(articleName, 'AA')) = false\n</code></pre></p>"},{"location":"External/Recommendations/Settings/#boost-expression","title":"Boost expression","text":"<p>Each item has a \"relevence rank\" for each user, the products with the highest relevance rank are the products that get recommended. Uf you set a limit of 4 products the 4 products with the highest relevance rank are shown.  You can affect the relevance rank by applying a boost expression.   </p> <p>Your boost expression is multiplied with the relevance rank. So if you for for example set boost expression: <code>2</code>, this means that you are multiplying all ranks with 2, thus not changing anything in the relative order for recommendations since all ranks are multiplied.  </p> <p>If you instead create the boost expression: <code>1+1.0*(product_group = 'bags')</code>, all ranks are multiplied by <code>1</code> but products in the product_group <code>bags</code> are multiplied by <code>2</code> thus increasing their rank relative to other products by 100%. </p> <p>if you change the expression to: <code>1+0.5*(product_group = 'bags')</code> the rank for bags relative to other products are increased by 50%  </p>"},{"location":"External/Recommendations/Settings/#interactionfilter","title":"InteractionFilter","text":"<p>This allows you to filter on purchase history, for example if you send in a user who has bought 2 items, and you have a filter removing 1 of the item types, the products returned will be based only on the item not filtered out.</p>"},{"location":"External/Recommendations/Settings/#trend","title":"Trend","text":"<p>Trend limits the time interval for the data that the recomendations are based on. <code>Max trend</code> uses a short time interval resulting in the machine-learning model only recommending products that are trending last few weeks.</p>"},{"location":"External/Recommendations/Settings/#limit","title":"Limit","text":"<p>Limit decides how many recomended items are returned. For example, Limit 4 = Four recommended items. Limit 12 = 12 recommended items.</p>"},{"location":"External/Recommendations/Settings/#max-orders","title":"Max orders","text":"<p>Number of orders that are taken into concideration when recommending products. <code>Max orders = 1</code> means only the items included in the latest order are used as purchase history for that user. <code>Max orders = 2</code> means the items in the two latest orders are taken into account.</p> <p>To see what the orders included contains, the items excluded from the customers purchase history are marked with a red dot, as seen below: </p>"},{"location":"External/Recommendations/Settings/#max-interactions","title":"Max interactions","text":"<p>Number of items that are taken into concideration when recommending products. <code>Max items = 1</code> means only the latest purchased item is used as purchase history for that user. <code>Max items = 2</code> means the two latest items are taken into account.</p>"},{"location":"External/Recommendations/Settings/#allow-items-from-history","title":"Allow items from history","text":"<p>Sets a filter so that all items the user have bought cannot be recommended. </p>"},{"location":"External/Recommendations/Settings/#shuffled","title":"Shuffled","text":"<p>If Limit is set to 10 the items are recomended in order (most likly next purchase is at the top). by enabling <code>shuffled</code> it still recommends the top 10 items but the order of the top 10 items are shuffled. </p>"},{"location":"External/Recommendations/Settings/#advanced","title":"Advanced","text":"<p>Create an advanced filter. </p> <ul> <li>Name: is the variable name.</li> <li>Field: the field wich you are taking data from</li> <li>Option: \"all\" means all items in the users purchase history. \"items\" means all items sent in through the API by the customer. When the customer makes an API call for the recommendation they can include items in the API call. for example items in the basket, the item you are currently looking at etc.</li> </ul> <p>See some example advanced filters below:</p>"},{"location":"External/Recommendations/Settings/#example-1-rotation-parameter-recommendations","title":"Example 1: Rotation parameter recommendations","text":"Parameter Description RotateLength (float 0-1) RotateLength best\u00e4mmer hur stor andel av alla kandidater vi till\u00e5ter rekommenderas, s\u00e5 0.9 =&gt; 90% av produkterna. RotateSeed (int) Med RotateSeed &gt; 0 slumpas ordningen av kandidaterna. En och samma seed ger en viss ordning och \u00e4r unikt per anv\u00e4ndare. Vi kommer allts\u00e5 inte ignorera samma 50% av produktutbudet vid RotateLength=0.5 f\u00f6r alla anv\u00e4ndare. Ex <code>\"RotateSeed\":\"now()\"</code> RotateOffset (float 0-1): Anger fr\u00e5n vilken andel av kandidaterna vi b\u00f6rjar g\u00f6ra urvalet. RotateOffset tillsammans med RotateLength skapar m\u00f6jlighet att \u201cpaginera\u201d urvalet. Man kan ex skapa 4 separata set av slumpade produkter som man roterar p\u00e5 genom att anv\u00e4nda RotateLength:0.25 och anropa APIi:t med RotateOffset: 0, 0.25, 0.5, 0.75."},{"location":"External/Recommendations/Settings/#example-2-advanced-query","title":"Example 2: Advanced query","text":"<p><pre><code>{\"Context\":[{\"Name\":\"bought_phone_model\",\"Field\":\"phone_model\",\"Option\":\"all\"}]}\n</code></pre> Filter expression: <pre><code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model))\n</code></pre> <code>split(bought_phone_model,\",\")</code> returns an array of your purchase history <code>(\"Field\":\"phone_model\"): ['bought_phone_model_1','bought_phone_model_2','bought_phone_model_3','bought_phone_model_4']</code></p> <p><code>makeArray(phone_model)</code> returns an array of all <code>phone_model</code>: <code>['phone_model_1','phone_model_2','phone_model_3','phone_model_n']</code></p> <p><code>hasAny</code> checks if elements in <code>array 1</code> is contained in <code>array 2</code> </p> <p>in this case the customers purchase history includes <code>iPhone 12/Pro MagSafe</code> and <code>iPhone 12/Pro</code> The expression <code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model))</code> will thus return <code>true</code> for all pruducts where <code>phone_model</code> = <code>iPhone 12/Pro MagSafe</code> or <code>iPhone 12/Pro</code> and <code>false</code> for all other products. Thus only products with the same <code>phone_model</code> will be recommended.</p> <p>If you change the expression to <code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model)) = FALSE</code> everything will be inverted thus only recomending products where the <code>phone_model</code> != <code>iPhone 12/Pro MagSafe</code> or <code>iPhone 12/Pro</code>.</p> <p> </p> <p>[NOTE! when adding an item to in the <code>Search for items</code> you DO NOT add this item to your purchase history, these items are sent in from the API meaning they will only be affected by a filter expression if you use the option <code>item</code> instead of <code>all</code>]  </p> <p>See example: </p>"},{"location":"External/Recommendations/Settings/#add-field-limit","title":"Add field limit","text":"<p>Field limit lets you set a filter on how many of each category should be recommended. This is usually used on product category where you only want to include ex. max 2 of each product category.</p>"},{"location":"External/Recommendations/Settings/#other-actions","title":"Other Actions","text":""},{"location":"External/Recommendations/Settings/#save-as-new-profile","title":"Save as new profile","text":"<p>Saves the current configuration as a profile new</p>"},{"location":"External/Recommendations/Settings/#save-profile","title":"Save profile","text":"<p>Overrides the current profile with the current configuration.</p>"},{"location":"External/Recommendations/Settings/#delete-profile","title":"Delete profile","text":"<p>Delets selected profile.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/","title":"Siftlab Recommended Recommendation Profiles","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#recommendations-ui","title":"Recommendations UI","text":"<p>You can use the platform to create personalized product recommendations that can be added to your website, checkout flow or in email campaigns. </p> <p>You can create customizable API recommendations profiles with filters and rules based on your product meta data, and apply them to different use cases. Below is an example how the recommendations tab can look. By clicking the cog wheel you will open the settings.</p> <p></p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#settings","title":"Settings","text":"<p>Here we explain the different settings fields that can be seen after clicing the cog wheel.</p> <p></p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#search","title":"Search","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#columns","title":"Columns","text":"<p>Columns are the data columns that can be used to create filters and rules. These are activated in the data model with the <code>MlFilter</code> toggle (MlFilter = Machine Learning Filter), see the image below. </p> <p></p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#filter-expression","title":"Filter expression","text":"<p>Here you can write an expression that creates a filter for your recommendation profile. For example, perhaps you just want to recommend products in a specific category, then you would write something like <code>category = 'Kaffe &amp; Te'</code>, or <code>price</code> &gt; <code>100</code></p> <p>If the expression is <code>True</code> the product will be included in the recommendation, and it the expression is <code>False</code> the product will be filtered. In the case of <code>price</code> &gt; <code>100</code>, the expression will return <code>True</code> for all products with a price larger than 100 thus removing all items with a price lower than 100 from the recommendations.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#boost-expression","title":"Boost expression","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#interactionfilter","title":"InteractionFilter","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#trend","title":"Trend","text":"<p>Trend limits the time interval for the data that the recomendations are based on. <code>Max trend</code> uses a short time interval resulting in the machine-learning model only recommending products that are trending last few weeks.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#limit","title":"Limit","text":"<p>Limit decides how many recomended items are returned. For example, Limit 4 = Four recommended items. Limit 12 = 12 recommended items.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#max-orders","title":"Max orders","text":"<p>Number of orders that are taken into concideration when recommending products. <code>Max orders = 1</code> means only the items included in the latest order are used as purchase history for that user. <code>Max orders = 2</code> means the items in the two latest orders are taken into account.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#max-interactions","title":"Max interactions","text":"<p>Number of items that are taken into concideration when recommending products. <code>Max items = 1</code> means only the latest purchased item is used as purchase history for that user. <code>Max items = 2</code> means the two latest items are taken into account.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#allow-items-from-history","title":"Allow items from history","text":"<p>Sets a filter so that all items the user have bought cannot be recommended. </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#shuffled","title":"Shuffled","text":"<p>If Limit is set to 10 the items are recomended in order (most likly next purchase is at the top). by enabling <code>shuffled</code> it still recommends the top 10 items but the order of the top 10 items are shuffled. </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#advanced","title":"Advanced","text":"<p>Create an advanced filter. </p> <ul> <li>Name: is the variable name.</li> <li>Field: the field wich you are taking data from</li> <li>Option: \"all\" means all items in the users purchase history. \"items\" means all items sent in through the API by the customer. When the customer makes an API call for the recommendation they can include items in the API call. for example items in the basket, the item you are currently looking at etc.</li> </ul> <p>See an example below:</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#example-of-advanced-quey","title":"Example of advanced quey","text":"<p><pre><code>{\"Context\":[{\"Name\":\"bought_phone_model\",\"Field\":\"phone_model\",\"Option\":\"all\"}]}\n</code></pre> Filter expression: <pre><code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model))\n</code></pre> <code>split(bought_phone_model,\",\")</code> returns an array of your purchase history <code>(\"Field\":\"phone_model\"): ['bought_phone_model_1','bought_phone_model_2','bought_phone_model_3','bought_phone_model_4']</code></p> <p><code>makeArray(phone_model)</code> returns an array of all <code>phone_model</code>: ['phone_model_1','phone_model_2','phone_model_3','phone_model_n']  </p> <p><code>hasAny</code> checks if elements in <code>array 1</code> is contained in <code>array 2</code> </p> <p>in this case the customers purchase history includes <code>iPhone 12/Pro MagSafe</code> and <code>iPhone 12/Pro</code> The expression <code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model))</code> will thus return <code>true</code> for all pruducts where <code>phone_model</code> = <code>iPhone 12/Pro MagSafe</code> or <code>iPhone 12/Pro</code> and <code>false</code> for all other products. Thus only products with the same <code>phone_model</code> will be recommended.</p> <p>If you change the expression to <code>hasAny(split(bought_phone_model,\",\"),makeArray(phone_model)) = FALSE</code> everything will be inverted thus only recomending products where the <code>phone_model</code> != <code>iPhone 12/Pro MagSafe</code> or <code>iPhone 12/Pro</code>.</p> <p> </p> <p>[NOTE! when adding an item to in the <code>Search for items</code> you DO NOT add this item to your purchase history, these items are sent in from the API meaning they will only be affected by a filter expression if you use the option <code>item</code> instead of <code>all</code>]  </p> <p>See example: </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#add-field-limit","title":"Add field limit","text":"<p>Field limit lets you set a filter on how many of each category should be recommended. This is usually used on product category where you only want to include ex. max 2 of each product category.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#save-as-new-profile","title":"Save as new profile","text":"<p>Saves the current configuration as a profile new</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#save-profile","title":"Save profile","text":"<p>Overrides the current profile with the current configuration.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#delete-profile","title":"Delete profile","text":"<p>Delets selected profile.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#front-page","title":"Front page","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#search-for-items","title":"Search for items","text":"<p>Items added in the search items window are counted as items given to the platform through the API call. This means they dont not affected by <code>boughtArticleGroup</code> but affects <code>basketArticleGroup</code>. </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#profile","title":"Profile","text":"<p>Saved profiles</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#refresh","title":"Refresh","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#clear-user-and-items","title":"Clear user and items","text":"<p>Removes selected items and user</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#bench","title":"Bench","text":"<p>Shows how fast the recommendation are returend when making an API call. (if your datamodel has MLFilter active for many fields the recommendations will be slower).</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#add-random-item","title":"Add random item","text":"<p>Same as search for items but adds a random item.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#add-random-user","title":"Add random user","text":"<p>Selects a random user and shows what items this user has previously bought and the returned recommended items based on this. </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#recommendation-output","title":"Recommendation output","text":"<p>The output is what the API returns to the customer. All fields active in the Columns section are returnerd. if the <code>image</code> is active the output will only show the image and format. by disabling the image you can see all other fields that are returned. With image active:  With image inactive: </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#data-available-in-recommendations","title":"Data available in recommendations","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#mlmeta","title":"MlMeta","text":"<p>To show an image and name on your recomendations you have to choose a format field and an image field under items AND activate the ml meta for these fields.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#mlfilter","title":"MlFilter","text":"<p>To write filter expressions based on fields you have to activate ml filter for these fields</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#recommendations-in-emails","title":"Recommendations in emails","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#introduction","title":"Introduction","text":"<p>We can supply personalized recommendations in automated email flows. The technical integration varies between partners, but the main difference compared to segments is that we supply an individually customized set of products per user.</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#partners","title":"Partners","text":"<p>Here we specify how the process works between us and specified partners</p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#voyado","title":"Voyado","text":"<p>Voyado has an ftp server to which we push a file of the form <pre><code>ContactId,Skus,ExpiryDate\n00000000-0000-0000-0000-000000000000,\"Item692,Item165,Item835,Item166,Item836,Item838,Item277,Item504,Item332,Item218,Item608,Item528\",9999-12-31T00:00:00.000+0000\n0001394c-9e71-43d6-86f3-ada901fc4c10,\"Item218,Item411,Item135,Item504,Item692,Item202,Item1035,Item835,Item412,Item277,Item610,Item515\",9999-12-31T00:00:00.000+0000\n00021b19-db3d-4d26-84ce-ad56g0f028e3,\"Item165,Item702,Item701,Item146,Item166,Item835,Item1035,Item610,Item836,Item135,Item218,Item150\",9999-12-31T00:00:00.000+0000\n</code></pre> The list of <code>Skus</code> is generated from our recommendation engine for the user specified under <code>ContactId</code>, where the 0 line is the fallback recommendation.</p> <p>-- Insert how to setup Voyado Export here --</p> <p>Once the recommendation flow is set up and an initial export has been sent, the recommendations can be previewed in Voyado. This is done by us selecting a few contactIds from the platform for them to check. Then the customer triggers a support ticket by sending an email to support@revide.se (revide is the old name, this may be updated) with the contactIds and requests checking the preview.</p> <p>Note: Historically there has been some issues due to contacts being labeled as \"Contact\" instead of \"Member\". This should be resolved as of April 2022, but to be safe, it could be a good idea to locate and include a user labeled \"Contact\" that has a purchase history. </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#sift-lab-recommended-recommendation-profiles","title":"Sift Lab recommended recommendation profiles","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#basic-settings","title":"Basic settings","text":"<ul> <li>Products in stock</li> <li>For clear gender-related products: See if you should only recommend products with the same gender</li> </ul>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#olika-rekommendationer","title":"Olika rekommendationer","text":""},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#standard-rekommendation-standard","title":"Standard rekommendation: Standard","text":"<p>Rekommendera det mest sannolika n\u00e4sta k\u00f6pet (medium trend) Syfte: H\u00f6g sannolik att konvertera  </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#liknande-produkter-rekommendation-similar","title":"Liknande produkter rekommendation: Similar","text":"<p>Rekommendera produkter ur samma kategori Syfte: H\u00f6g igenk\u00e4nningsfaktor  </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#inspiration-rekommendation-inspiration","title":"Inspiration rekommendation: Inspiration","text":"<p>Rekommendera produkter inom kategorier kunden ej handlat inom tidigare / vald produkt Syfte: Inspirera till k\u00f6p i de mest relevanta kategorier man \u00e4nnu ej handlat inom / produkten ej \u00e4r i  </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#win-back-rekommendation-win-back","title":"Win-back rekommendation: Win-back","text":"<p>Rekommendera mest sannolika produkter en kund kommer k\u00f6pa utifr\u00e5n historiskt k\u00f6pbeteende Syfte: Presenter de produkter en churnad kund har h\u00f6gst sannolikhet att k\u00f6pa  </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#check-out-rekommendation-check-out","title":"Check-out rekommendation: Check-out","text":"<p>Rekommendera billigare produkter utifr\u00e5n vad kunden lagt i sin varukorg Syfte: \u00d6ka AOV med en relevant produkt i det l\u00e4gre prissegmentet Expression: <code>tofloat(Price) &lt; tofloat(last(basketArticlePrice))*0.8</code></p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#tack-for-senast-order-rekommendation-last-purchase","title":"Tack f\u00f6r senast order rekommendation: Last purchase","text":"<p>Rekommendera mest sannolika produkter utifr\u00e5n kundens senaste order Syfte: \u00d6ka andelen kunder som g\u00f6r ett n\u00e4sta k\u00f6p  </p>"},{"location":"External/Recommendations/Siftlab-Recommended-Recommendation-Profiles/#produkter-pa-rea-rekommendationer-on-sale","title":"Produkter p\u00e5 rea rekommendationer: On sale","text":"<p>Rekommendera produkter som \u00e4r p\u00e5 rea Syfte: \u00d6ka rea fsg genom att visa relevanta produkter p\u00e5 rea.  </p>"},{"location":"External/Segmentations/Auto-targeting/","title":"Auto-targeting","text":"<p>Auto-targeting helps save time while at the same time finding optimal groups of customers to target with what items. In this part we will first shortly go over the process, and then dive deeper into different settings and adjustments you can make.</p> <ol> <li>We start with <code>User Settings</code> for the user segment and an example of only including customers that has a previous purchase of some sort.</li> <li>Creating two <code>Advertisements</code> where we let our AI choose the most appropriate products for our targeted segment</li> <li><code>Enabling the AI</code> to divide the user segment into the most accurate segments for increased potential Auto-targeting identifies optimal combinations of items and users that helps increase conversion in campaigns through machine learning. </li> <li>Evaluating and <code>Exporting</code> the segments.</li> </ol> Why use auto-targeting? <p>  You can use Sift Labs auto-targering AI to answer the below questions:   <ul> <li>What products should I use in my targeted campaign to a specific customer group?</li> </ul>  Sift Labs AI ranks the products based on what products are most likely to trigger a purchase given the selected group of customers.  <ul> <li>Which customers should I send a campaign with specific products to?</li> </ul>  Sift Labs AI ranks the users based on who are most probable to make a purchase given the products in your campaign.  Using this information you can avoid sending email to customers that would consider it spam by only selecting customers that show the highest affinity to the product you want to promote.   </p>"},{"location":"External/Segmentations/Auto-targeting/#step-by-step-tutorial-to-create-an-ai-based-auto-targeting-campaign","title":"Step-by-step tutorial to create an AI-based auto-targeting campaign","text":""},{"location":"External/Segmentations/Auto-targeting/#step-1-create-auto-targeting-campaign","title":"Step 1: Create auto-targeting campaign","text":"<ol> <li>Choose the Segmentations tab</li> <li>Create a new auto-targeting campaign by clicking the + icon in the upper right corner</li> <li>Choose a segment name and select Auto-targeting under Segment Type.   </li> </ol>"},{"location":"External/Segmentations/Auto-targeting/#step-2-choose-recipients-user-settings","title":"Step 2: Choose recipients (<code>User Settings</code>)","text":"<p>After the campaign has been created, now it's time to set the recipients (audience) for the campaign. If you do not add a filter you are targeting your whole user base, as you can see in the example below 520,954 (out of 520,954). If you want to select a specific customer group you can add a filter by pressing the   icon (Add filter group) under User Settings (see image below) to create a filter group.  </p> <p>From the add filter group you can chose between item, interaction and user filter.</p> <ul> <li> <p>The <code>user filter</code> lets you filter your userbase based on user metadata such as age, gender, country, region, etc. </p> </li> <li> <p>The <code>interaction filter</code> lets you filter your userbase on interaction metadata such as order_id, sales price, discount, tax, store, freight etc. (This means users that has made an interaction at a particular store or discount...)</p> </li> <li> <p>The <code>item filter</code> lets you filter your userbase on item metadata such as product name, product category, color, size, COGS, etc. (This means users that has purchased an item in a particular color, size, category...)</p> </li> </ul> <p>After adding a filter group you can now select the metadata you want to use. Press the   icon which opens a drop down where you can select the field you want use to create your filter. In the below example we select the field region.</p> <p> From here you can slice your userbase to only include customers that live for example in Stockholm and Sk\u00e5ne</p> <p></p> <p>You can add a additional filter groups,  in the example below we add an additional item filter  to only include users that have made a purchase in the category Hudv\u00e5rd</p> <p></p> <p>From these two filter we have sliced our customer base down to 101,168 (out of 520,954) customers.</p>"},{"location":"External/Segmentations/Auto-targeting/#step-3-choose-auto-targeting-settings-auto-targeting-settings","title":"Step 3: Choose auto-targeting settings (<code>Auto-targeting Settings</code>)","text":"<p>These settings allow you to decide how you want to approach the auto-targeting. </p> <p>The <code>tick box</code> lets you choose if you want to block users from being included in an advertisement including products they already bought.</p> <p>The <code>Trend slide</code> has to do with how much weight trending products should gain, for example if you choose a high trend value, then seasonal trends in sales will have higher weight (e.g. during Christmas more Santa Claus-products are probably sold)</p> <p></p>"},{"location":"External/Segmentations/Auto-targeting/#step-4-create-an-advertisement","title":"Step 4: Create an <code>Advertisement</code>","text":"<p>To create an advertisement click the  icon on the left side below the User Settings card section. </p> <p>For each advertisement you choose to create, you can use different filters. The filters on each advertisement is unique for that advertisement and allows you to target a sub-segments within the segment you got after step 2, <code>User Settings</code> for each different advertisement. </p> <p>You can now choose between letting the AI choose products depending on the segments chosen, or add a specific item wanted for whatever reason. A combination of both alternatives is also recommended. The buttons for doing this is <code>ADD ITEM</code> + <code>ADD AUTO ITEM</code> according to picture below.</p> <p></p> <p>When you have chosen or let the AI choose the product(s), selected wanted filters on users/items you're all set and can let our AI take over, press '<code>SAVE AND RUN</code>' </p>"},{"location":"External/Segmentations/Auto-targeting/#step-5-evaluating-and-exporting","title":"Step 5: Evaluating and exporting","text":"<p>The AI has now divided the segment into the best advertisements. You can see the distribution on the right side of the site, along with a graph showing the score distribution. </p> <p>The button <code>EXPORT USERS</code> allows you to export the users to another data source, or download a file containing the users for each segment.</p> <p>You can also go back and readjust your advertisements by clicking the pencil on the top right picture below.</p> <p></p>"},{"location":"External/Segmentations/Auto-targeting/#below-is-further-information-about-the-auto-targeting","title":"Below is further information about the Auto-targeting.","text":""},{"location":"External/Segmentations/Auto-targeting/#filter-settings","title":"Filter Settings","text":"<p>Below is a description of all the different buttons, toggles etc in the segmentation/auto-targeting on the platform.</p>"},{"location":"External/Segmentations/Auto-targeting/#disable-filter","title":"Disable Filter","text":"<p>By toggling Enable filter (see figure below) you can disable the whole filter group. This can be used to easier see the effect a filter has on the customer base.</p> <p></p>"},{"location":"External/Segmentations/Auto-targeting/#exclude","title":"Exclude","text":"<p>By toggling Exclude (see figure below) you invert the filter. In this example this means we are looking at customers that live in Stockholm or Sk\u00e5ne, that HAS NOT made a purchase in the category Hudv\u00e5rd</p> <p>We can also chose to exclude on the item level instead of on the interaction level (see below). In this example this means we are looking att customers that live in Stockholm or Sk\u00e5ne that HAS made a purchase in any category Except in the category Hudv\u00e5rd.</p> <p></p>"},{"location":"External/Segmentations/Auto-targeting/#match-any","title":"Match Any","text":"<p>By toggling Match Any** (see figure below) you change how the filtergroups interact from AND to OR. when Match Any is not active only the users that fill the criterias of ALL the filter groups are included. By activating Match Any users that fill the criterias of ANY filter is included</p> <p></p>"},{"location":"External/Segmentations/Auto-targeting/#filter-options-for-category-number-and-timestamps","title":"Filter options for category, number and timestamps","text":"<p>In the datamodel you can assign different roles to a field depending on how it should behave. </p> <p>A category behaves like a string (text) this means you can create a filter that include all fields that contains a certain text.</p> <p>With a Number you can create filters that are larger or smaller than the field. </p> <p>With a Timestamp you can use the date format to filter on dates larger than ex. 2022-10-10.</p>"},{"location":"External/Segmentations/Auto-targeting/#category-options","title":"Category options","text":"<ul> <li>Equals </li> <li>Not equals</li> <li>In</li> <li>Not in</li> <li>Starts with</li> <li>Not starts with</li> <li>Is empty</li> <li>Is not empty</li> <li>Contains</li> </ul>"},{"location":"External/Segmentations/Auto-targeting/#number-options","title":"Number options","text":"<ul> <li>Equals</li> <li>Not Equals</li> <li>Less than</li> <li>Greater than</li> <li>Less than or equals</li> <li>Greater than or equals</li> <li>Between</li> <li>Not between</li> </ul>"},{"location":"External/Segmentations/Auto-targeting/#timestamp-options","title":"Timestamp options","text":"<ul> <li>Between</li> <li>Not between</li> <li>Equals</li> <li>Not equals</li> <li>Before</li> <li>After</li> </ul>"},{"location":"External/Segmentations/Clustering/","title":"Clustering","text":"<p>Clustering makes it possible to group users and items into a specified number of clusters. For finding cluster, there are three different algorithms that can be used:</p> <ol> <li><code>embedding</code> with item clusters from the trained machine-learning model and users assigned to the most connected cluster,</li> <li><code>plsa</code>, Probabilistic Latent Semantic Analysis run separately, and</li> <li><code>modularity</code>, network-based modularity optimizationrun separately.</li> </ol> <p><code>embedding</code> is the fastest method since it uses the trained machine-learning model.</p>"},{"location":"External/Segmentations/Overview/","title":"Segmentations Overview","text":"<p>The segmentation section of the platform focuses on finding optimal groups of customers for different types of campaigns. There are two different types of segmentation as follows below.</p>"},{"location":"External/Segmentations/Overview/#auto-targeting","title":"Auto-targeting","text":"<p>Set your customer/product filters and let our AI divide your customers into optimized subgroups for your products, you can either choose the products yourself, or let the AI find suitable products to recommend for each sub-group.</p> <p>Read more about this at the Auto-targeting page</p> <p></p> <p></p>"},{"location":"External/Segmentations/Overview/#clustering","title":"Clustering","text":"<p>Can be used to make the platform find similar sub-groups of customers within your customer base. You can then use these clusters for analysis and targeting etc.</p> <p>Read more about this at the Clustering page</p> <p></p> <p></p>"}]}